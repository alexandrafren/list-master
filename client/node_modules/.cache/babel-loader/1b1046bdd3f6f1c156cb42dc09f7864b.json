{"ast":null,"code":"//fetch todos\nexport function fetchTodos() {\n  return function (dispatch) {\n    dispatch({\n      type: 'LOADING_TODOS'\n    });\n    return fetch('api/todo').then(function (response) {\n      return response.json();\n    }).then(function (todos) {\n      return dispatch({\n        type: 'ADD_TODOS',\n        payload: todos\n      });\n    });\n  };\n}\nexport function postTodo(todoinput) {\n  return function (dispatch) {\n    dispatch({\n      type: 'ADDING_TODO'\n    });\n    return fetch('api/todo', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todoinput)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: 'ADD_TODO',\n        payload: data\n      });\n    });\n  };\n}\nexport function updateTodo(todoInput) {\n  return function (dispatch) {\n    dispatch({\n      type: 'UPDATING_TODO'\n    });\n    return fetch('api/todo', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todoInput)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: 'UPDATE_TODO',\n        payload: data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/actions/todoActions.js"],"names":["fetchTodos","dispatch","type","fetch","then","response","json","todos","payload","postTodo","todoinput","method","headers","body","JSON","stringify","data","updateTodo","todoInput"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAT,GAAsB;AACzB,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOC,KAAK,CAAC,UAAD,CAAL,CACJC,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADT,EAEJF,IAFI,CAEC,UAAAG,KAAK;AAAA,aAAIN,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBM,QAAAA,OAAO,EAAED;AAA9B,OAAD,CAAZ;AAAA,KAFN,CAAP;AAGD,GALD;AAMD;AAEH,OAAO,SAASE,QAAT,CAAkBC,SAAlB,EAA6B;AAClC,SAAO,UAACT,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WAAOC,KAAK,CAAC,UAAD,EAAa;AACvBQ,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf;AALiB,KAAb,CAAL,CAMJN,IANI,CAMC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANT,EAOJF,IAPI,CAOC,UAAAY,IAAI;AAAA,aAAIf,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBM,QAAAA,OAAO,EAAEQ;AAA5B,OAAD,CAAZ;AAAA,KAPL,CAAP;AAQD,GAVD;AAWD;AAED,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AACpC,SAAO,UAACjB,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WAAOC,KAAK,CAAC,UAAD,EAAa;AACvBQ,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,SAAf;AALiB,KAAb,CAAL,CAMJd,IANI,CAMC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANT,EAOJF,IAPI,CAOC,UAAAY,IAAI;AAAA,aAAIf,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,aAAP;AAAsBM,QAAAA,OAAO,EAAEQ;AAA/B,OAAD,CAAZ;AAAA,KAPL,CAAP;AAQD,GAVD;AAWD","sourcesContent":["//fetch todos\nexport function fetchTodos() {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_TODOS' });\n      return fetch('api/todo')\n        .then(response => response.json())\n        .then(todos => dispatch({ type: 'ADD_TODOS', payload: todos }));\n    };\n  }\n\nexport function postTodo(todoinput) {\n  return (dispatch) => {\n    dispatch({type: 'ADDING_TODO' });\n    return fetch('api/todo', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(todoinput)\n    }).then(response => response.json())\n      .then(data => dispatch({type: 'ADD_TODO', payload: data}));\n  }\n}\n\nexport function updateTodo(todoInput) {\n  return (dispatch) => {\n    dispatch({type: 'UPDATING_TODO'});\n    return fetch('api/todo', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(todoInput)\n    }).then(response => response.json())\n      .then(data => dispatch({type: 'UPDATE_TODO', payload: data}));\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}