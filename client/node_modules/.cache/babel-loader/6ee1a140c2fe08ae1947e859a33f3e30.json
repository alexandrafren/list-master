{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/listmaster/list-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/listmaster/list-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/listmaster/list-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/listmaster/list-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/listmaster/list-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/listmaster/list-master/src/containers/TodosContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TodoInput from '../components/TodoInput';\nimport Todo from '../components/Todo';\n\nvar TodosContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodosContainer, _Component);\n\n  function TodosContainer() {\n    _classCallCheck(this, TodosContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodosContainer).apply(this, arguments));\n  }\n\n  _createClass(TodosContainer, [{\n    key: \"render\",\n    //renderTodos = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"testing for todos //\", React.createElement(TodoInput, {\n        addTodo: this.props.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodosContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTodo: function addTodo(todo) {\n      return dispatch({\n        type: 'ADD_TODO',\n        todo: todo\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);","map":{"version":3,"sources":["/home/learn/code/listmaster/list-master/src/containers/TodosContainer.js"],"names":["React","Component","connect","TodoInput","Todo","TodosContainer","props","addTodo","mapStateToProps","state","todos","mapDispatchToProps","dispatch","todo","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,c;;;;;;;;;;;;;AAEJ;6BAES;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF;AAMD;;;;EAX0BN,S;;AAc7B,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AAACL,IAAAA,OAAO,EAAE,iBAAAM,IAAI;AAAA,aAAID,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,UAAP;AAAmBD,QAAAA,IAAI,EAAJA;AAAnB,OAAD,CAAZ;AAAA;AAAd,GAAf;AAAA,CAA3B;;AAEA,eAAeX,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TodoInput from '../components/TodoInput'\r\nimport Todo from '../components/Todo'\r\n\r\nclass TodosContainer extends Component {\r\n\r\n  //renderTodos = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n\t\ttesting for todos\r\n        //<TodoInput addTodo={this.props.addTodo} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({addTodo: todo => dispatch({type: 'ADD_TODO', todo}) })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);\r\n"]},"metadata":{},"sourceType":"module"}