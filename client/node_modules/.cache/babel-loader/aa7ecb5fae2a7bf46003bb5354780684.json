{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectInput from '../components/ProjectInput';\nimport Project from '../components/Project';\nimport Todo from '../components/Todo';\n\nvar ProjectsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsContainer, _Component);\n\n  function ProjectsContainer() {\n    _classCallCheck(this, ProjectsContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectsContainer).apply(this, arguments));\n  }\n\n  _createClass(ProjectsContainer, [{\n    key: \"componentDidMount\",\n    //if todos have a project type !== '', render here\n    //filter todos, then map\n    // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n    value: function componentDidMount() {\n      var _this = this;\n\n      return fetch('api/todo').then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        var todos = data.map(function (todo) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, todo.name);\n        });\n\n        _this.setState({\n          todos: todos\n        });\n\n        console.log(_this.state.todos);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Create a Project\", React.createElement(ProjectInput, {\n        addProject: this.props.addProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch({\n        type: 'ADD_PROJECT',\n        project: project\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectInput","Project","Todo","ProjectsContainer","fetch","then","results","json","data","todos","map","todo","name","setState","console","log","state","props","addProject","mapStateToProps","mapDispatchToProps","dispatch","project","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAGMC,iB;;;;;;;;;;;;;AAEJ;AACA;AACD;wCAEmB;AAAA;;AAClB,aAAOC,KAAK,CAAC,UAAD,CAAL,CACNC,IADM,CACD,UAAAC,OAAO,EAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHM,EAGJF,IAHI,CAGC,UAAAG,IAAI,EAAI;AACd,YAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AAC7B,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAI,CAACC,IAAV,CAAP;AACD,SAFW,CAAZ;;AAGA,QAAA,KAAI,CAACC,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAEA;AAAR,SAAd;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAL,CAAWP,KAAvB;AACD,OATM,CAAP;AAUD;;;6BAGU;AACP,aACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKQ,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EA3B6BpB,S;;AA8BhC,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK,EAAI;AAC/B,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACP;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AAACH,IAAAA,UAAU,EAAE,oBAAAI,OAAO;AAAA,aAAID,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,aAAP;AAAsBD,QAAAA,OAAO,EAAPA;AAAtB,OAAD,CAAZ;AAAA;AAApB,GAAf;AAAA,CAA3B;;AAEA,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProjectInput from '../components/ProjectInput'\r\nimport Project from '../components/Project'\r\nimport Todo from '../components/Todo'\r\n\r\n\r\nclass ProjectsContainer extends Component {\r\n\r\n  //if todos have a project type !== '', render here\r\n  //filter todos, then map\r\n // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n componentDidMount(){\r\n  return fetch('api/todo')\r\n  .then(results => {\r\n    return results.json();\r\n  }).then(data => {\r\n    let todos = data.map((todo) => {\r\n      return(<li>{todo.name}</li>)\r\n    })\r\n    this.setState({todos: todos})\r\n    console.log(this.state.todos)\r\n  })\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"column\">\r\n        Create a Project\r\n        <ProjectInput addProject={this.props.addProject} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({addProject: project => dispatch({type: 'ADD_PROJECT', project}) })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\r\n"]},"metadata":{},"sourceType":"module"}