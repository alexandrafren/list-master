{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/TodosContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TodoInput from '../components/TodoInput';\nimport Todo from '../components/Todo';\nimport { bindActionCreators } from 'redux';\nimport { fetchTodos } from '../actions/todoActions';\n\nvar TodosContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodosContainer, _Component);\n\n  function TodosContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodosContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodosContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filterTodos = function () {\n      //return this.state.todos.filter(Boolean)\n      return _this.props.todos.map(function (todo) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, todo.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodosContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchTodos(); //return fetch('api/project')\n      //.then(results =>{\n      //return results.json();\n      //}).then(data => {\n      //let projects = data.map((project) => {\n      //return (<div><input type=\"radio\" value=\"{project.id}\" onChange={this.handleChanged}/><label>{project.name}</label><br /></div>)\n      //})\n      //this.setState({projects: projects})\n      //})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Todos:\", this.filterTodos(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(TodoInput, {\n        addTodo: this.props.addTodo,\n        projects: this.state.projects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodosContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchTodos: fetchTodos\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/TodosContainer.js"],"names":["React","Component","connect","TodoInput","Todo","bindActionCreators","fetchTodos","TodosContainer","filterTodos","props","todos","map","todo","name","addTodo","state","projects","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;;IAEMC,c;;;;;;;;;;;;;;;;;;UAeJC,W,GAAc,YAAM;AAClB;AACA,aAAO,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD;AAAA,eAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,IAAV,CAAV;AAAA,OAArB,CAAP;AACD,K;;;;;;;wCAhBkB;AACjB,WAAKJ,KAAL,CAAWH,UAAX,GADiB,CAEjB;AACA;AACE;AACF;AACE;AACE;AACF;AACA;AACF;AACD;;;6BAOQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEG,KAAKE,WAAL,EAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWK,OAA/B;AAAwC,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA9B0Bf,S;;AAiC7B,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOd,kBAAkB,CAAC;AACxBC,IAAAA,UAAU,EAAEA;AADY,GAAD,EAEtBa,QAFsB,CAAzB;AAGD,CAJD;;AAMA,eAAejB,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TodoInput from '../components/TodoInput'\r\nimport Todo from '../components/Todo'\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchTodos } from '../actions/todoActions'\r\n\r\nclass TodosContainer extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchTodos();\r\n    //return fetch('api/project')\r\n    //.then(results =>{\r\n      //return results.json();\r\n    //}).then(data => {\r\n      //let projects = data.map((project) => {\r\n        //return (<div><input type=\"radio\" value=\"{project.id}\" onChange={this.handleChanged}/><label>{project.name}</label><br /></div>)\r\n      //})\r\n      //this.setState({projects: projects})\r\n    //})\r\n  }\r\n\r\n  filterTodos = () => {\r\n    //return this.state.todos.filter(Boolean)\r\n    return this.props.todos.map((todo) => <li>{todo.name}</li>)\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div className=\"column\">\r\n        Todos:\r\n        {this.filterTodos()}\r\n        <br />\r\n        <br />\r\n        <TodoInput addTodo={this.props.addTodo} projects={this.state.projects}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    fetchTodos: fetchTodos,\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}