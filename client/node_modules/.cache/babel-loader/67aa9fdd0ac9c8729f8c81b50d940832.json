{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectInput from '../components/ProjectInput';\nimport Project from '../components/Project';\nimport { bindActionCreators } from 'redux';\nimport { fetchProjects, postProject } from '../actions/todoActions';\n\nvar ProjectsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsContainer, _Component);\n\n  function ProjectsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filterProjects = function () {\n      return _this.props.projects.map(function (p) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, p.name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectsContainer, [{\n    key: \"componentDidMount\",\n    //if todos have a project type !== '', render here\n    //filter todos, then map\n    // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n    value: function componentDidMount() {\n      this.props.fetchProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"//List Projects and their corresponding to-dos//\", React.createElement(ProjectInput, {\n        addProject: this.props.addProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos,\n    projects: state.projects\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchProjects: fetchProjects,\n    postProject: postProject\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectInput","Project","bindActionCreators","fetchProjects","postProject","ProjectsContainer","filterProjects","props","projects","map","p","name","addProject","mapStateToProps","state","todos","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,wBAA3C;;IAGMC,iB;;;;;;;;;;;;;;;;;;UAUNC,c,GAAiB,YAAM;AACrB,aAAO,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,CAAD;AAAA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,CAAC,CAACC,IAAP,CAAP;AAAA,OAAxB,CAAP;AACD,K;;;;;;;AAVC;AACA;AACD;wCAEmB;AAChB,WAAKJ,KAAL,CAAWJ,aAAX;AACH;;;6BAOU;AACP,aACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAEE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWK,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAtB6Bd,S;;AAyBhC,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELP,IAAAA,QAAQ,EAAEM,KAAK,CAACN;AAFX,GAAP;AAID,CALD;;AAOA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOf,kBAAkB,CAAC;AACxBC,IAAAA,aAAa,EAAEA,aADS;AAExBC,IAAAA,WAAW,EAAEA;AAFW,GAAD,EAGtBa,QAHsB,CAAzB;AAID,CALD;;AAOA,eAAelB,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProjectInput from '../components/ProjectInput'\r\nimport Project from '../components/Project'\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchProjects, postProject } from '../actions/todoActions'\r\n\r\n\r\nclass ProjectsContainer extends Component {\r\n\r\n  //if todos have a project type !== '', render here\r\n  //filter todos, then map\r\n // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n componentDidMount(){\r\n    this.props.fetchProjects();\r\n}\r\n\r\nfilterProjects = () => {\r\n  return this.props.projects.map((p) => <li>{p.name}</li>)\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"column\">\r\n        //List Projects and their corresponding to-dos//\r\n        <ProjectInput addProject={this.props.addProject} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos,\r\n    projects: state.projects\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    fetchProjects: fetchProjects,\r\n    postProject: postProject\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}