{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectInput from '../components/ProjectInput';\nimport Project from '../components/Project';\n\nvar ProjectsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsContainer, _Component);\n\n  function ProjectsContainer() {\n    _classCallCheck(this, ProjectsContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectsContainer).apply(this, arguments));\n  }\n\n  _createClass(ProjectsContainer, [{\n    key: \"componentDidMount\",\n    //if todos have a project type !== '', render here\n    //filter todos, then map\n    // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch('api/todo').then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        var todos = data.map(function (todo) {\n          return React.createElement(\"li\", {\n            key: todo.project_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, todo.name);\n        });\n\n        _this.setState({\n          todos: todos\n        });\n      });\n      fetch('api/project').then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        var projects = data.map(function (project) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"radio\",\n            value: \"{project.id}\",\n            onChange: _this.handleChanged,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, project.name), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }));\n        });\n\n        _this.setState({\n          projects: projects\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"//List Projects and their corresponding to-dos//\", React.createElement(ProjectInput, {\n        addProject: this.props.addProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch({\n        type: 'ADD_PROJECT',\n        project: project\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectInput","Project","ProjectsContainer","fetch","then","results","json","data","todos","map","todo","project_id","name","setState","projects","project","handleChanged","props","addProject","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAGMC,iB;;;;;;;;;;;;;AAEJ;AACA;AACD;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,UAAD,CAAL,CACCC,IADD,CACM,UAAAC,OAAO,EAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHD,EAGGF,IAHH,CAGQ,UAAAG,IAAI,EAAI;AACd,YAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAU;AAC7B,iBAAO;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2BD,IAAI,CAACE,IAAhC,CAAP;AACD,SAFW,CAAZ;;AAGA,QAAA,KAAI,CAACC,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACD,OARD;AASCL,MAAAA,KAAK,CAAC,aAAD,CAAL,CACAC,IADA,CACK,UAAAC,OAAO,EAAG;AACd,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHA,EAGEF,IAHF,CAGO,UAAAG,IAAI,EAAI;AACd,YAAIO,QAAQ,GAAGP,IAAI,CAACE,GAAL,CAAS,UAACM,OAAD,EAAa;AACnC,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,KAAK,EAAC,cAA1B;AAAyC,YAAA,QAAQ,EAAE,KAAI,CAACC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,EAA6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQD,OAAO,CAACH,IAAhB,CAA7E,EAA0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1G,CAAR;AACD,SAFc,CAAf;;AAGA,QAAA,KAAI,CAACC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEA;AAAX,SAAd;AACD,OARA;AASF;;;6BAGU;AACP,aACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAEE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnC6BpB,S;;AAsChC,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AAACJ,IAAAA,UAAU,EAAE,oBAAAH,OAAO;AAAA,aAAIO,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,aAAP;AAAsBR,QAAAA,OAAO,EAAPA;AAAtB,OAAD,CAAZ;AAAA;AAApB,GAAf;AAAA,CAA3B;;AAEA,eAAehB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProjectInput from '../components/ProjectInput'\r\nimport Project from '../components/Project'\r\n\r\n\r\nclass ProjectsContainer extends Component {\r\n\r\n  //if todos have a project type !== '', render here\r\n  //filter todos, then map\r\n // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n componentDidMount(){\r\n  fetch('api/todo')\r\n  .then(results => {\r\n    return results.json();\r\n  }).then(data => {\r\n    let todos = data.map((todo) => {\r\n      return(<li key={todo.project_id}>{todo.name}</li>)\r\n    })\r\n    this.setState({todos: todos})\r\n  })\r\n   fetch('api/project')\r\n  .then(results =>{\r\n    return results.json();\r\n  }).then(data => {\r\n    let projects = data.map((project) => {\r\n      return (<div><input type=\"radio\" value=\"{project.id}\" onChange={this.handleChanged}/><label>{project.name}</label><br /></div>)\r\n    })\r\n    this.setState({projects: projects})\r\n  })\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"column\">\r\n        //List Projects and their corresponding to-dos//\r\n        <ProjectInput addProject={this.props.addProject} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({addProject: project => dispatch({type: 'ADD_PROJECT', project}) })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\r\n"]},"metadata":{},"sourceType":"module"}