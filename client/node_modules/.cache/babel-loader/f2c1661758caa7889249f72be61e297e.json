{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectInput from '../components/ProjectInput';\nimport Project from '../components/Project';\nimport Todo from '../components/Todo';\n\nvar ProjectsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsContainer, _Component);\n\n  function ProjectsContainer() {\n    _classCallCheck(this, ProjectsContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectsContainer).apply(this, arguments));\n  }\n\n  _createClass(ProjectsContainer, [{\n    key: \"render\",\n    //if todos have a project type !== '', render here\n    //filter todos, then map\n    // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Create a Project\", React.createElement(ProjectInput, {\n        addProject: this.props.addProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addProject: function addProject(project) {\n      return dispatch({\n        type: 'ADD_PROJECT',\n        project: project\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectInput","Project","Todo","ProjectsContainer","props","addProject","mapStateToProps","state","todos","mapDispatchToProps","dispatch","project","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAGMC,iB;;;;;;;;;;;;;AAEJ;AACA;AACD;6BAEU;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAb6BP,S;;AAgBhC,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AAACL,IAAAA,UAAU,EAAE,oBAAAM,OAAO;AAAA,aAAID,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,aAAP;AAAsBD,QAAAA,OAAO,EAAPA;AAAtB,OAAD,CAAZ;AAAA;AAApB,GAAf;AAAA,CAA3B;;AAEA,eAAeZ,OAAO,CAACO,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProjectInput from '../components/ProjectInput'\r\nimport Project from '../components/Project'\r\nimport Todo from '../components/Todo'\r\n\r\n\r\nclass ProjectsContainer extends Component {\r\n\r\n  //if todos have a project type !== '', render here\r\n  //filter todos, then map\r\n // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        Create a Project\r\n        <ProjectInput addProject={this.props.addProject} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({addProject: project => dispatch({type: 'ADD_PROJECT', project}) })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\r\n"]},"metadata":{},"sourceType":"module"}