{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/CommentContainer.js\";\nimport React, { Component } from 'react';\nimport CommentInput from '../components/CommentInput';\nimport Comment from '../components/Comment';\n\nvar CommentContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentContainer, _Component);\n\n  function CommentContainer() {\n    var _this;\n\n    _classCallCheck(this, CommentContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentContainer).call(this));\n\n    _this.addComment = function (commentInput) {\n      _this.setState({\n        comments: _this.state.comments.concat(commentInput)\n      });\n    };\n\n    _this.formatComments = function () {\n      return _this.state.comments.map(function (comment) {\n        return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, comment));\n      });\n    };\n\n    _this.state = {\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(CommentContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(CommentInput, {\n        addComment: this.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), this.formatComments()));\n    }\n  }]);\n\n  return CommentContainer;\n}(Component);\n\nexport default CommentContainer;","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/CommentContainer.js"],"names":["React","Component","CommentInput","Comment","CommentContainer","addComment","commentInput","setState","comments","state","concat","formatComments","map","comment"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,gB;;;;;AAEF,8BAAa;AAAA;;AAAA;;AACT;;AADS,UAOfC,UAPe,GAOF,UAACC,YAAD,EAAkB;AAC7B,YAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAG,MAAKC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BJ,YAA3B;AADD,OAAd;AAGD,KAXc;;AAAA,UAafK,cAbe,GAaE,YAAM;AACnB,aAAO,MAAKF,KAAL,CAAWD,QAAX,CAAoBI,GAApB,CAAwB,UAACC,OAAD;AAAA,eAAa,0CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,OAAJ,CAAF,CAAb;AAAA,OAAxB,CAAP;AACH,KAfc;;AAET,UAAKJ,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFS;AAKZ;;;;6BAaM;AACP,aACA,0CACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKH,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEC,KAAKM,cAAL,EAFD,CADJ,CADA;AAQD;;;;EA7B4BV,S;;AAiC/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport CommentInput from '../components/CommentInput'\nimport Comment from '../components/Comment'\n\nclass CommentContainer extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            comments: []\n        }\n    }\n\n  addComment = (commentInput) => {\n    this.setState({\n        comments: (this.state.comments.concat(commentInput))\n    })\n  }\n\n  formatComments = () => {\n      return this.state.comments.map((comment) => <><p>{comment}</p></>)\n  }\n\n  \n  render() {\n    return(\n    <>\n        <div className=\"comment\">\n        <CommentInput addComment={this.addComment} />\n        {this.formatComments()}\n        </div>\n    </>\n    )\n  }\n}\n\n\nexport default CommentContainer;\n\n"]},"metadata":{},"sourceType":"module"}