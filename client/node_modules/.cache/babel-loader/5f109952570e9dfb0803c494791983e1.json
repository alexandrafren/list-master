{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/TodosContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TodoInput from '../components/TodoInput';\nimport Todo from '../components/Todo';\n\nvar TodosContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodosContainer, _Component);\n\n  //renderTodos = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n  function TodosContainer() {\n    var _this;\n\n    _classCallCheck(this, TodosContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodosContainer).call(this));\n    _this.state = {\n      todos: [],\n      projects: []\n    };\n    return _this;\n  }\n\n  _createClass(TodosContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch('api/todo').then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        var todos = data.map(function (todo) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, todo.name);\n        });\n\n        _this2.setState({\n          todos: todos\n        });\n      });\n      return fetch('api/project').then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        var projects = data.map(function (project) {\n          console.log(project);\n          return project;\n        });\n\n        _this2.setState({\n          projects: projects\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Todos:\", this.state.todos, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(TodoInput, {\n        addTodo: this.props.addTodo,\n        projects: this.state.projects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodosContainer;\n}(Component); //const mapStateToProps = state => {\n//return {\n//todos: state.todos\n//}\n//}\n//const mapDispatchToProps = (dispatch) => ({addTodo: todo => dispatch({type: 'ADD_TODO', todo}) })\n///xport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);\n\n\nexport default TodosContainer;","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/TodosContainer.js"],"names":["React","Component","connect","TodoInput","Todo","TodosContainer","state","todos","projects","fetch","then","results","json","data","map","todo","name","setState","project","console","log","props","addTodo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,c;;;;;AAEJ;AACA,4BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFY;AAMb;;;;wCAEkB;AAAA;;AACjB,aAAOC,KAAK,CAAC,UAAD,CAAL,CACNC,IADM,CACD,UAAAC,OAAO,EAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHM,EAGJF,IAHI,CAGC,UAAAG,IAAI,EAAI;AACd,YAAIN,KAAK,GAAGM,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAU;AAC7B,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAI,CAACC,IAAV,CAAP;AACD,SAFW,CAAZ;;AAGA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACV,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACD,OARM,CAAP;AASA,aAAOE,KAAK,CAAC,aAAD,CAAL,CACNC,IADM,CACD,UAAAC,OAAO,EAAG;AACd,eAAOA,OAAO,CAACC,IAAR,EAAP;AACD,OAHM,EAGJF,IAHI,CAGC,UAAAG,IAAI,EAAI;AACd,YAAIL,QAAQ,GAAGK,IAAI,CAACC,GAAL,CAAS,UAACI,OAAD,EAAa;AACnCC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,iBAAOA,OAAP;AACD,SAHc,CAAf;;AAIA,QAAA,MAAI,CAACD,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAEA;AAAX,SAAd;AACD,OATM,CAAP;AAUD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEG,KAAKF,KAAL,CAAWC,KAFd,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKc,KAAL,CAAWC,OAA/B;AAAwC,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWE,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA3C0BP,S,GA8C7B;AACE;AACE;AACF;AACF;AAEA;AAEA;;;AAEA,eAAeI,cAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TodoInput from '../components/TodoInput'\r\nimport Todo from '../components/Todo'\r\n\r\nclass TodosContainer extends Component {\r\n\r\n  //renderTodos = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [],\r\n      projects: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    return fetch('api/todo')\r\n    .then(results => {\r\n      return results.json();\r\n    }).then(data => {\r\n      let todos = data.map((todo) => {\r\n        return(<li>{todo.name}</li>)\r\n      })\r\n      this.setState({todos: todos})\r\n    })\r\n    return fetch('api/project')\r\n    .then(results =>{\r\n      return results.json();\r\n    }).then(data => {\r\n      let projects = data.map((project) => {\r\n        console.log(project)\r\n        return project\r\n      })\r\n      this.setState({projects: projects})\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div className=\"column\">\r\n        Todos:\r\n        {this.state.todos}\r\n        <br />\r\n        <br />\r\n        <TodoInput addTodo={this.props.addTodo} projects={this.state.projects}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//const mapStateToProps = state => {\r\n  //return {\r\n    //todos: state.todos\r\n  //}\r\n//}\r\n\r\n//const mapDispatchToProps = (dispatch) => ({addTodo: todo => dispatch({type: 'ADD_TODO', todo}) })\r\n\r\n///xport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);\r\n\r\nexport default TodosContainer;\r\n"]},"metadata":{},"sourceType":"module"}