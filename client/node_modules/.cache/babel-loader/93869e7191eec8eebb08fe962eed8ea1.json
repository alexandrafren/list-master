{"ast":null,"code":"import _classCallCheck from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/code/list-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/code/list-master/client/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectInput from '../components/ProjectInput';\nimport Project from '../components/Project';\nimport { bindActionCreators } from 'redux';\nimport { fetchProjects } from '../actions/todoActions';\n\nvar ProjectsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectsContainer, _Component);\n\n  //if todos have a project type !== '', render here\n  //filter todos, then map\n  // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\n  function ProjectsContainer() {\n    var _this;\n\n    _classCallCheck(this, ProjectsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectsContainer).call(this));\n    _this.state = {\n      todos: [],\n      projects: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"//List Projects and their corresponding to-dos//\", React.createElement(ProjectInput, {\n        addProject: this.props.addProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchProjects: fetchProjects\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/home/learn/code/list-master/client/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectInput","Project","bindActionCreators","fetchProjects","ProjectsContainer","state","todos","projects","props","addProject","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAGMC,iB;;;;;AAEJ;AACA;AACD;AAEC,+BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFY;AAMb;;;;wCACiB;AAChB,WAAKC,KAAL,CAAWL,aAAX;AACH;;;6BAGU;AACP,aACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAEE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKK,KAAL,CAAWC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAzB6BX,S;;AA4BhC,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOV,kBAAkB,CAAC;AACxBC,IAAAA,aAAa,EAAEA;AADS,GAAD,EAEtBS,QAFsB,CAAzB;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ProjectInput from '../components/ProjectInput'\r\nimport Project from '../components/Project'\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchProjects } from '../actions/todoActions'\r\n\r\n\r\nclass ProjectsContainer extends Component {\r\n\r\n  //if todos have a project type !== '', render here\r\n  //filter todos, then map\r\n // renderProjects = () => this.props.todos.map((todo, i) => <Todo key={i} name={todo.name} />)\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [],\r\n      projects: []\r\n    }\r\n  }\r\n componentDidMount(){\r\n    this.props.fetchProjects();\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div class=\"column\">\r\n        //List Projects and their corresponding to-dos//\r\n        <ProjectInput addProject={this.props.addProject} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    fetchProjects: fetchProjects,\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}